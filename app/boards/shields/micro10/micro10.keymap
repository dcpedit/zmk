/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LFN    1
#define RFN    2
#define CFN    3

/ {
    behaviors {
       
        lm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 24 25 26 27>;
        };
       
        rm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 19 20 21 22 23>;
        };
        
        lht: layer_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        tht: top_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "TOP_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <7 16 17 18>;
        };

        bht: bottom_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "BOTTOM_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <0>;
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <31>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp Q      &kp W      &kp E       &kp R       &kp T     &kp Y       &kp U       &kp I      &kp O       &kp P
    &lm LGUI A &lm LALT S &lm LCTRL D &lm LSHFT F &kp G     &rm RALT H  &rm RSHFT J &rm RCTRL K            &rm RGUI L
    &lht LFN Z &kp X      &kp C       &bht CFN V  &kp B     &kp N       &kp M       &kp COMMA              &lht RFN DOT
    &kp LSHFT             &kp BSPC    &kp C_MUTE  &kp SPACE &none                                          &kp RALT
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
        
        l_fn {
            bindings = <
    &kp F1     &kp F2     &kp F3     &kp F4       &kp F5    &kp N6      &kp N7     &kp N8      &kp N9    &kp N0
    &trans     &trans     &trans     &trans       &trans    &kp BSLH    &kp LBKT   &kp RBKT              &kp RET
    &none      &bt BT_NXT &trans     &trans       &trans    &kp SEMI    &kp APOS   &none                 &kp COMMA
    &none                 &none      &trans       &trans    &none                                        &none
            >;
            sensor-bindings = <&inc_dec_kp PG_DN PG_UP>;
        };

        r_fn {
            bindings = <
    &kp N1      &kp N2      &kp N3     &kp N4      &kp N5     &kp F6      &kp F7     &kp F8      &kp F9     &kp F10
    &kp TAB     &kp MINUS   &kp EQUAL  &kp FSLH    &trans     &trans      &trans     &trans                 &trans
    &kp GRAVE   &kp ESC     &none      &none       &none      &none       &bt BT_CLR &none                  &none
    &none                   &none      &trans      &trans     &none                                         &none
            >;
        };

        c_fn {
            bindings = <
    &trans      &trans      &trans     &sys_reset      &bootloader &trans     &trans     &kp UP      &trans     &trans
    &trans      &trans      &trans     &trans      &trans     &trans      &kp LEFT   &kp DOWN               &kp RIGHT
    &trans      &trans      &trans     &trans      &trans     &trans      &trans     &trans                 &trans
    &trans                  &trans     &trans      &kp BSPC   &trans                                        &trans
            >;
        };
    };
};
